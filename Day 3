import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score

df = pd.read_csv("train.csv")

df = df[['GrLivArea', 'TotalBsmtSF', 'OverallQual', 'SalePrice']]
df.dropna(inplace=True)

X_simple = df[['GrLivArea']]
y = df['SalePrice']

X_train_s, X_test_s, y_train_s, y_test_s = train_test_split(X_simple, y, test_size=0.2, random_state=0)

model_simple = LinearRegression()
model_simple.fit(X_train_s, y_train_s)
y_pred_s = model_simple.predict(X_test_s)

plt.scatter(X_simple, y, color='lightblue')
plt.plot(X_simple, model_simple.predict(X_simple), color='red')
plt.title('Simple Linear Regression (GrLivArea vs SalePrice)')
plt.xlabel('GrLivArea')
plt.ylabel('SalePrice')
plt.grid(True)
plt.show()

print("Simple Linear Regression:")
print("Intercept:", model_simple.intercept_)
print("Coefficient:", model_simple.coef_)
print("R² Score:", r2_score(y_test_s, y_pred_s))
print("MSE:", mean_squared_error(y_test_s, y_pred_s))

X_multi = df[['GrLivArea', 'TotalBsmtSF', 'OverallQual']]
y_multi = df['SalePrice']

X_train_m, X_test_m, y_train_m, y_test_m = train_test_split(X_multi, y_multi, test_size=0.2, random_state=0)

model_multi = LinearRegression()
model_multi.fit(X_train_m, y_train_m)
y_pred_m = model_multi.predict(X_test_m)

print("\nMultiple Linear Regression:")
print("Intercept:", model_multi.intercept_)
print("Coefficients:", model_multi.coef_)
print("R² Score:", r2_score(y_test_m, y_pred_m))
print("MSE:", mean_squared_error(y_test_m, y_pred_m))
